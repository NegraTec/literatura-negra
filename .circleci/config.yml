defaults: &defaults
  working_directory: ~/repo
  docker:      
      - image: circleci/python:3.6.1
      - image: postgres:9.6
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: literatura
          POSTGRES_PASSWORD: mysecretpassword

version: 2
jobs:
  analise_seguranca:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - run:
          name: executa a analise
          command: |
            . venv/bin/activate
            safety check
            bandit -r .
  testes_unitarios:
    <<: *defaults
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: testes unitarios
          command: |
            . venv/bin/activate
            python manage.py test tests.testes_unitarios

      - store_artifacts:
          path: test-reports
          destination: test-reports

  testes_integracao:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - run:
          name: testes integracao
          command: |
            . venv/bin/activate
            python manage.py test tests.testes_integracao

workflows:
  version: 2
  build_and_test:
    jobs:
      - testes_unitarios
      - testes_integracao:
         requires:
           - testes_unitarios